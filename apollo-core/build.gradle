buildscript {
    ext {
        springBootVersion = '1.2.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'apollo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    //compile('org.springframework.boot:spring-boot-starter-actuator')

    //compile('org.springframework.boot:spring-boot-starter-aop')
    //TODO: check the cash
    compile('org.springframework.boot:spring-boot-starter-thymeleaf'){
        exclude module: 'spring-boot-starter-logging'
    }
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-logging'
    }
    compile('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.boot:spring-boot-starter-log4j2')

    //TODO: do not on
    //compile('org.springframework.boot:spring-boot-starter-data-jpa')
    //compile('org.springframework.boot:spring-boot-starter-security')
    //TODO: devtools check that not be included in release excludeDevtools build property only 3.1 version
    //compile("org.springframework.boot:spring-boot-devtools")
    //runtime('org.postgresql:postgresql:9.4-1201-jdbc41')
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
